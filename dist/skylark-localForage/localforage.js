/**
 * skylark-localForage - A skylark wrapper for localForage.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./drivers/indexeddb","./drivers/websql","./drivers/localstorage","./utils/serializer","./utils/promise","./utils/executeCallback","./utils/executeTwoCallbacks","./utils/includes","./utils/isArray"],function(e,r,t,n,i,o,s,c,u){"use strict";const l={},d={},a={INDEXEDDB:e,WEBSQL:r,LOCALSTORAGE:t},f=[a.INDEXEDDB._driver,a.WEBSQL._driver,a.LOCALSTORAGE._driver],h=["dropInstance"],v=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(h),_={description:"",driver:f.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function g(e,r){e[r]=function(){const t=arguments;return e.ready().then(function(){return e[r].apply(e,t)})}}function p(){for(let e=1;e<arguments.length;e++){const r=arguments[e];if(r)for(let e in r)r.hasOwnProperty(e)&&(u(r[e])?arguments[0][e]=r[e].slice():arguments[0][e]=r[e])}return arguments[0]}class y{constructor(e){for(let e in a)if(a.hasOwnProperty(e)){const r=a[e],t=r._driver;this[e]=t,l[t]||this.defineDriver(r)}this._defaultConfig=p({},_),this._config=p({},this._defaultConfig,e),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(()=>{})}config(e){if("object"==typeof e){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(let r in e){if("storeName"===r&&(e[r]=e[r].replace(/\W/g,"_")),"version"===r&&"number"!=typeof e[r])return new Error("Database version must be a number.");this._config[r]=e[r]}return!("driver"in e&&e.driver)||this.setDriver(this._config.driver)}return"string"==typeof e?this._config[e]:this._config}defineDriver(e,r,t){const n=new i(function(r,t){try{const n=e._driver,s=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!e._driver)return void t(s);const u=v.concat("_initStorage");for(let r=0,n=u.length;r<n;r++){const n=u[r];if((!c(h,n)||e[n])&&"function"!=typeof e[n])return void t(s)}(function(){const r=function(e){return function(){const r=new Error(`Method ${e} is not implemented by the current driver`),t=i.reject(r);return o(t,arguments[arguments.length-1]),t}};for(let t=0,n=h.length;t<n;t++){const n=h[t];e[n]||(e[n]=r(n))}})();const a=function(t){l[n]&&console.info(`Redefining LocalForage driver: ${n}`),l[n]=e,d[n]=t,r()};"_support"in e?e._support&&"function"==typeof e._support?e._support().then(a,t):a(!!e._support):a(!0)}catch(e){t(e)}});return s(n,r,t),n}driver(){return this._driver||null}getDriver(e,r,t){const n=l[e]?i.resolve(l[e]):i.reject(new Error("Driver not found."));return s(n,r,t),n}getSerializer(e){const r=i.resolve(n);return s(r,e),r}ready(e){const r=this,t=r._driverSet.then(()=>(null===r._ready&&(r._ready=r._initDriver()),r._ready));return s(t,e,e),t}setDriver(e,r,t){const n=this;u(e)||(e=[e]);const o=this._getSupportedDrivers(e);function c(){n._config.driver=n.driver()}function l(e){return n._extend(e),c(),n._ready=n._initStorage(n._config),n._ready}const d=null!==this._driverSet?this._driverSet.catch(()=>i.resolve()):i.resolve();return this._driverSet=d.then(()=>{const e=o[0];return n._dbInfo=null,n._ready=null,n.getDriver(e).then(e=>{n._driver=e._driver,c(),n._wrapLibraryMethodsWithReady(),n._initDriver=function(e){return function(){let r=0;return function t(){for(;r<e.length;){let i=e[r];return r++,n._dbInfo=null,n._ready=null,n.getDriver(i).then(l).catch(t)}c();const o=new Error("No available storage method found.");return n._driverSet=i.reject(o),n._driverSet}()}}(o)})}).catch(()=>{c();const e=new Error("No available storage method found.");return n._driverSet=i.reject(e),n._driverSet}),s(this._driverSet,r,t),this._driverSet}supports(e){return!!d[e]}_extend(e){p(this,e)}_getSupportedDrivers(e){const r=[];for(let t=0,n=e.length;t<n;t++){const n=e[t];this.supports(n)&&r.push(n)}return r}_wrapLibraryMethodsWithReady(){for(let e=0,r=v.length;e<r;e++)g(this,v[e])}createInstance(e){return new y(e)}}return new y});
//# sourceMappingURL=sourcemaps/localforage.js.map
