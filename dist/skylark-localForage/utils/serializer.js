/**
 * skylark-localForage - A skylark wrapper for localForage.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./createBlob"],function(r){"use strict";var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t="~~local_forage_type~",n=/^~~local_forage_type~([^~]+)~/,a="__lfsc__:",i=a.length,o="arbf",f="blob",u="si08",l="ui08",c="uic8",s="si16",y="si32",b="ur16",A="ui32",g="fl32",w="fl64",h=i+o.length,d=Object.prototype.toString;function j(r){var t,n,a,i,o,f=.75*r.length,u=r.length,l=0;"="===r[r.length-1]&&(f--,"="===r[r.length-2]&&f--);var c=new ArrayBuffer(f),s=new Uint8Array(c);for(t=0;t<u;t+=4)n=e.indexOf(r[t]),a=e.indexOf(r[t+1]),i=e.indexOf(r[t+2]),o=e.indexOf(r[t+3]),s[l++]=n<<2|a>>4,s[l++]=(15&a)<<4|i>>2,s[l++]=(3&i)<<6|63&o;return c}function v(r){var t,n=new Uint8Array(r),a="";for(t=0;t<n.length;t+=3)a+=e[n[t]>>2],a+=e[(3&n[t])<<4|n[t+1]>>4],a+=e[(15&n[t+1])<<2|n[t+2]>>6],a+=e[63&n[t+2]];return n.length%3==2?a=a.substring(0,a.length-1)+"=":n.length%3==1&&(a=a.substring(0,a.length-2)+"=="),a}return{serialize:function(r,e){var n="";if(r&&(n=d.call(r)),r&&("[object ArrayBuffer]"===n||r.buffer&&"[object ArrayBuffer]"===d.call(r.buffer))){var i,h=a;r instanceof ArrayBuffer?(i=r,h+=o):(i=r.buffer,"[object Int8Array]"===n?h+=u:"[object Uint8Array]"===n?h+=l:"[object Uint8ClampedArray]"===n?h+=c:"[object Int16Array]"===n?h+=s:"[object Uint16Array]"===n?h+=b:"[object Int32Array]"===n?h+=y:"[object Uint32Array]"===n?h+=A:"[object Float32Array]"===n?h+=g:"[object Float64Array]"===n?h+=w:e(new Error("Failed to get type for BinaryArray"))),e(h+v(i))}else if("[object Blob]"===n){var j=new FileReader;j.onload=function(){var n=t+r.type+"~"+v(this.result);e(a+f+n)},j.readAsArrayBuffer(r)}else try{e(JSON.stringify(r))}catch(t){console.error("Couldn't convert value into a JSON string: ",r),e(null,t)}},deserialize:function(e){if(e.substring(0,i)!==a)return JSON.parse(e);var t,d=e.substring(h),v=e.substring(i,h);if(v===f&&n.test(d)){var p=d.match(n);t=p[1],d=d.substring(p[0].length)}var U=j(d);switch(v){case o:return U;case f:return r([U],{type:t});case u:return new Int8Array(U);case l:return new Uint8Array(U);case c:return new Uint8ClampedArray(U);case s:return new Int16Array(U);case b:return new Uint16Array(U);case y:return new Int32Array(U);case A:return new Uint32Array(U);case g:return new Float32Array(U);case w:return new Float64Array(U);default:throw new Error("Unkown type: "+v)}},stringToBuffer:j,bufferToString:v}});
//# sourceMappingURL=../sourcemaps/utils/serializer.js.map
