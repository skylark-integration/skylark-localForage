{"version":3,"sources":["utils/createBlob.js"],"names":["define","parts","properties","Blob","e","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","i","length","append","getBlob","type"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAyBA,OAlBA,SAAoBC,EAAOC,GAEvBD,EAAQA,MACRC,EAAaA,MACb,IACI,OAAO,IAAIC,KAAKF,EAAOC,GACzB,MAAOE,GACL,GAAe,cAAXA,EAAEC,KACF,MAAMD,EAIV,IAFA,IACIE,EAAU,IADuB,oBAAhBC,YAA8BA,YAAuC,oBAAlBC,cAAgCA,cAA0C,oBAAnBC,eAAiCA,eAAiBC,mBAExKC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,GAAK,EACnCL,EAAQO,OAAOZ,EAAMU,IAEzB,OAAOL,EAAQQ,QAAQZ,EAAWa","file":"../../utils/createBlob.js","sourcesContent":["define(function () {\n    'use strict';\n    // Abstracts constructing a Blob object, so it also works in older\n    // browsers that don't support the native Blob constructor. (i.e.\n    // old QtWebKit versions, at least).\n    // Abstracts constructing a Blob object, so it also works in older\n    // browsers that don't support the native Blob constructor. (i.e.\n    // old QtWebKit versions, at least).\n    function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n        try {\n            return new Blob(parts, properties);\n        } catch (e) {\n            if (e.name !== 'TypeError') {\n                throw e;\n            }\n            var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n            var builder = new Builder();\n            for (var i = 0; i < parts.length; i += 1) {\n                builder.append(parts[i]);\n            }\n            return builder.getBlob(properties.type);\n        }\n    }\n    return createBlob;\n});"]}